<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Dev &amp; Chill</title>
    <link>https://devandchill.com/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on Dev &amp; Chill</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Pablo Morelli</copyright>
    <lastBuildDate>Mon, 31 Aug 2020 20:00:00 +0100</lastBuildDate>
    <atom:link href="https://devandchill.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stop storing secrets on environment variables: Enter GCP Secret Manager</title>
      <link>https://devandchill.com/posts/2020/08/stop-storing-secrets-on-environment-variables-enter-gcp-secret-manager/</link>
      <pubDate>Mon, 31 Aug 2020 20:00:00 +0100</pubDate>
      <guid>https://devandchill.com/posts/2020/08/stop-storing-secrets-on-environment-variables-enter-gcp-secret-manager/</guid>
      <description>&lt;p&gt;The other day I encountered the &lt;a href=&#34;https://www.sethvargo.com/secrets-in-serverless/&#34;  target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34; &gt;following post&lt;/a&gt;&#xA; where Seth Vargo was doing some statements regarding the usage of environment variables:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[&amp;hellip;]Â While this approach is simple and straightforward, it comes with considerable security drawbacks - the secrets exist in plaintext in the environment. Any other process, library, or dependency running inside the process has access to the environment which has already been exploited multiple times.&#xA;Unfortunately, it is trivial for a malicious library author to inject this type of vulnerability into an otherwise helpful utility package.&#xA;To be absolutely, unequivocally clear, you should not store secret or sensitive information in environment variables in plaintext.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Pipelines: Build a dockerized app and deploy to kubernetes</title>
      <link>https://devandchill.com/posts/2019/10/azure-pipelines-build-a-dockerized-app-and-deploy-to-kubernetes/</link>
      <pubDate>Sat, 19 Oct 2019 22:22:29 +0200</pubDate>
      <guid>https://devandchill.com/posts/2019/10/azure-pipelines-build-a-dockerized-app-and-deploy-to-kubernetes/</guid>
      <description>&lt;p&gt;&lt;em&gt;2021 update: Since KubeSail was not working as expected, the solution is now hosted in Okteto which offers a free namespace for developers to try out a hosted Kubernetes service.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Every company has a different way to work and configure CI/CD, and all of them have pros and cons. I&amp;rsquo;ve worked with Azure Pipelines before (but when it was called VSTS and the configuration was done in a more visual way and not with yaml files). Now I am currently working with Travis for CI and Flux for CD but I think it is always good to keep an eye on how the competitors are doing and what they have to offer.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
