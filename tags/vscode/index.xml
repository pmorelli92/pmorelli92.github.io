<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vscode on Dev &amp; Chill</title>
    <link>https://devandchill.com/tags/vscode/</link>
    <description>Recent content in vscode on Dev &amp; Chill</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Pablo Morelli</copyright>
    <lastBuildDate>Sun, 29 Jan 2023 20:30:00 +0100</lastBuildDate><atom:link href="https://devandchill.com/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How I approach microservice testing in 2023</title>
      <link>https://devandchill.com/posts/2023/01/how-i-approach-microservice-testing-in-2023/</link>
      <pubDate>Sun, 29 Jan 2023 20:30:00 +0100</pubDate>
      
      <guid>https://devandchill.com/posts/2023/01/how-i-approach-microservice-testing-in-2023/</guid>
      <description>ðŸ‘‰ The codebase used in this post can be found in my Github. ðŸ‘ˆ
Introduction As a software engineer, I&amp;rsquo;ve had the opportunity to work with microservices in various companies and each one had its own unique approach to testing the codebase. From my experience, I&amp;rsquo;ve come to realize that there&amp;rsquo;s no one-size-fits-all solution when it comes to testing microservices. Should there be only unit test? What about the external dependencies?</description>
    </item>
    
  </channel>
</rss>
