<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gopath on Dev &amp; Chill</title>
    <link>https://devandchill.com/tags/gopath/</link>
    <description>Recent content in Gopath on Dev &amp; Chill</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Pablo Morelli</copyright>
    <lastBuildDate>Wed, 13 Mar 2019 17:07:15 +0100</lastBuildDate>
    <atom:link href="https://devandchill.com/tags/gopath/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go Modules: Working outside GOPATH</title>
      <link>https://devandchill.com/posts/2019/03/go-modules-working-outside-gopath/</link>
      <pubDate>Wed, 13 Mar 2019 17:07:15 +0100</pubDate>
      <guid>https://devandchill.com/posts/2019/03/go-modules-working-outside-gopath/</guid>
      <description>&lt;p&gt;When I started learning Golang (a couple of months ago) one of the things that I concerned most with was the &lt;strong&gt;project structure&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;It may sound irrelevant to bother with this when you are learning the language; but, every time I am browsing .net core applications or libraries on GitHub, I find it extremely unappealing when certain projects are not structured in a conventional way.&lt;/p&gt;&#xA;&lt;p&gt;My starting point was the following talk:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
