<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unit on Dev &amp; Chill</title>
    <link>https://devandchill.com/tags/unit/</link>
    <description>Recent content in Unit on Dev &amp; Chill</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Pablo Morelli</copyright>
    <lastBuildDate>Sun, 29 Jan 2023 20:30:00 +0100</lastBuildDate>
    <atom:link href="https://devandchill.com/tags/unit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How I approach microservice testing in 2023</title>
      <link>https://devandchill.com/posts/2023/01/how-i-approach-microservice-testing-in-2023/</link>
      <pubDate>Sun, 29 Jan 2023 20:30:00 +0100</pubDate>
      <guid>https://devandchill.com/posts/2023/01/how-i-approach-microservice-testing-in-2023/</guid>
      <description>&lt;p&gt;ðŸ‘‰ &lt;a href=&#34;https://github.com/pmorelli92/how-I-test-microservices-2023&#34;  target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34; &gt;The codebase used in this post can be found in my Github.&lt;/a&gt;&#xA; ðŸ‘ˆ&lt;/p&gt;&#xA;&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;As a software engineer, I&amp;rsquo;ve had the opportunity to work with microservices in various companies and each one had its own unique approach to testing the codebase. From my experience, I&amp;rsquo;ve come to realize that there&amp;rsquo;s no one-size-fits-all solution when it comes to testing microservices. Should there be only unit test? What about the external dependencies? Do we care about what happen if a third party returns a response that is not expected? Is contract testing needed? So, what do we do?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
